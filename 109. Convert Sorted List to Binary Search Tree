# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def sortedListToBST(self, head):
        """
        :type head: Optional[ListNode]
        :rtype: Optional[TreeNode]
        """
        len=0
        curr=head
        while curr:  #find length of LL
            curr=curr.next
            len+=1
        
        self.head=head

        def rec(start,end):
            if start>end:
                return None
            
            middle=(start+end)//2
            #left
            left=rec(start,middle-1)
            #middle
            root=TreeNode(self.head.val)
            self.head=self.head.next
            root.left=left
            #right
            root.right=rec(middle+1,end)
            return root
        

        return rec(0,len-1)
