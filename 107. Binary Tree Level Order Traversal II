from collections import deque
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def levelOrderBottom(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        if root is None:
            return None
        
        queue=deque()
        result=[]
        queue.append(root)

        while queue:
            level=[]
            n=len(queue)
            for i in range(n):
                node=queue.popleft()
                level.append(node.val)

                if node.left:queue.append(node.left)
                if node.right:queue.append(node.right)
            
            result.append(level)
    

        return result[::-1]
